openapi: 3.0.0
info:
  title: Vehicle Contract Management API
  description: API for managing Customers, vehicles, events, and contracts
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /Customers:
    get:
      summary: Get all Customers
      responses:
        '200':
          description: A list of Customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Create a new Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: The created Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /Customers/{id}:
    get:
      summary: Get a Customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The Customer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found

    put:
      summary: Update a Customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: The updated Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found

    delete:
      summary: Delete a Customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer deleted
        '404':
          description: Customer not found

  /vehicles:
    get:
      summary: Get all vehicles
      responses:
        '200':
          description: A list of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
    post:
      summary: Create a new vehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '201':
          description: The created vehicle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'

  /vehicles/{id}:
    get:
      summary: Get a vehicle by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The vehicle data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Vehicle not found

    put:
      summary: Update a vehicle by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      responses:
        '200':
          description: The updated vehicle
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Vehicle not found

    delete:
      summary: Delete a vehicle by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Vehicle deleted
        '404':
          description: Vehicle not found

  /events:
    get:
      summary: Get all events
      responses:
        '200':
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: The created event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'

  /events/{id}:
    get:
      summary: Get an event by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

    put:
      summary: Update an event by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: The updated event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found

    delete:
      summary: Delete an event by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Event deleted
        '404':
          description: Event not found

  /contracts:
    get:
      summary: Get all contracts
      responses:
        '200':
          description: A list of contracts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
    post:
      summary: Create a new contract
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '201':
          description: The created contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'

  /contracts/{id}:
    get:
      summary: Get a contract by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The contract data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '404':
          description: Contract not found

    put:
      summary: Update a contract by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '200':
          description: The updated contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '404':
          description: Contract not found

    delete:
      summary: Delete a contract by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract deleted
        '404':
          description: Contract not found

components:
  schemas:
    Customer:
      type: object
      properties:
        customer_id:
          type: integer
        customer_name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        city:
            type: string


    Vehicle:
      type: object
      properties:
        vehicle_id:
          type: integer
        vin:
          type: string
        license_plate:
          type: string
        brand:
          type: string
        model:
          type: string
        year:
          type: string
        fuel_type:
          type: string
        power:
          type: integer

    Event:
      type: object
      properties:
        event_id:
          type: integer
        event_date:
          type: string
          format: date-time
        event_type:
          type: string
        comment:
          type: string
        contract:
          $ref: '#/components/schemas/Contract'

    Contract:
      type: object
      properties:
        contract_id:
          type: integer
        duration:
          type: integer
        distance:
            type: integer
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        total_price:
          type: number
        price_month:
          type: number
        odometer:
          type: number
        start_mileage:
          type: number
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        customer:
          $ref: '#/components/schemas/Customer'
